{"version":3,"sources":["QuoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteBox","useState","quotes","setQuotes","currentQuote","setCurrentQuote","useEffect","fetch","then","res","json","data","Math","floor","random","length","catch","console","log","id","className","options","strings","text","autoStart","author","onClick","newQuoteIndex","href","encodeURI","icon","faShare","size","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRA2DeA,EAtDE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACdC,EADc,KACNC,EADM,OAEmBF,mBAAS,IAF5B,mBAEdG,EAFc,KAEAC,EAFA,KAIrBC,qBAAU,WACRC,MAAM,+BACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLR,EAAUQ,GACVN,EAAgBM,EAAKC,KAAKC,MAAMD,KAAKE,SAAWH,EAAKI,aAEtDC,MAAMC,QAAQC,OAChB,IAOH,OAAOhB,EAAOa,OACZ,sBAAKI,GAAG,YAAYC,UAAU,iBAA9B,UACE,oBAAID,GAAG,OAAP,SACE,cAAC,IAAD,CACEE,QAAS,CACPC,QAASlB,EAAamB,KACtBC,WAAW,OAIjB,oBAAIL,GAAG,SAAP,SACGf,EAAaqB,OAASrB,EAAaqB,OAAS,YAE/C,wBAAQN,GAAG,YAAYO,QAlBP,WAClB,IAAMC,EAAgBf,KAAKC,MAAMD,KAAKE,SAAWZ,EAAOa,QACxDV,EAAgBH,EAAOyB,KAgBrB,2BAGA,iCACE,oBACER,GAAG,cACHS,KAAI,+CAA0CC,UAC5CzB,EAAamB,OAHjB,6BAOE,cAAC,IAAD,CAAiBO,KAAMC,IAASC,KAAK,eAK3C,qBAAKb,GAAG,YAAYC,UAAU,iBAA9B,SACE,oBAAID,GAAG,OAAP,2BCxCSc,MAZf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,WCKKc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1BZ,M","file":"static/js/main.c8b339f7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Typewriter from 'typewriter-effect'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faShare } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst QuoteBox = () => {\r\n  const [quotes, setQuotes] = useState([])\r\n  const [currentQuote, setCurrentQuote] = useState({})\r\n\r\n  useEffect(() => {\r\n    fetch('https://type.fit/api/quotes')\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setQuotes(data)\r\n        setCurrentQuote(data[Math.floor(Math.random() * data.length)])\r\n      })\r\n      .catch(console.log)\r\n  }, [])\r\n\r\n  const getNewQuote = () => {\r\n    const newQuoteIndex = Math.floor(Math.random() * quotes.length)\r\n    setCurrentQuote(quotes[newQuoteIndex])\r\n  }\r\n\r\n  return quotes.length ? (\r\n    <div id=\"quote-box\" className=\"twelve columns\">\r\n      <h1 id=\"text\">\r\n        <Typewriter\r\n          options={{\r\n            strings: currentQuote.text,\r\n            autoStart: true,\r\n          }}\r\n        />\r\n      </h1>\r\n      <h2 id=\"author\">\r\n        {currentQuote.author ? currentQuote.author : 'Unknown'}\r\n      </h2>\r\n      <button id=\"new-quote\" onClick={getNewQuote}>\r\n        Get new quote\r\n      </button>\r\n      <button>\r\n        <a\r\n          id=\"tweet-quote\"\r\n          href={`http://twitter.com/intent/tweet?text=${encodeURI(\r\n            currentQuote.text\r\n          )}`}\r\n        >\r\n          tweet quote &nbsp;\r\n          <FontAwesomeIcon icon={faShare} size=\"2x\" />\r\n        </a>\r\n      </button>\r\n    </div>\r\n  ) : (\r\n    <div id=\"quote-box\" className=\"twelve columns\">\r\n      <h1 id=\"text\">Loading...</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuoteBox\r\n","import QuoteBox from './QuoteBox'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <QuoteBox />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './css/normalize.css'\nimport './css/skeleton.css'\nimport './scss/quotes.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\nreportWebVitals()\n"],"sourceRoot":""}